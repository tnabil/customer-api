#%RAML 1.0
securitySchemes:
  basicAuth: !include ./securitySchemes/basicAuth.raml
title: Example API illustrating RAML best practices
version: v1
baseUri: http://api.example.com/{version}

mediaType: application/json
protocols: HTTPS
securedBy: basicAuth

uses:
  resType: resourceTypes/resourceTypes.lib.raml
  cusType: schemas/customerTypes.raml
  tr: traits/traits.lib.raml

/customers:
  type:
    {
      resType.collection: {
        "getResponseType": "cusType.GetCustomersResponse",
        "postRequestType": "cusType.PostCustomerRequest",
      }
    }
  get:
    is: [tr.pageable, tr.searchable, tr.sortable, tr.syncable]
  post:
  /{customerId}:
    type:
      {
        resType.member: {
          "putRequestType" : "cusType.PutCustomerRequest"
        }
      }
    get:
      is: [tr.cacheable]
    put:
    patch:
    delete:
    /addresses:
      type:
        {
          resType.collection: {
            "getResponseType": "cusType.GetAddressesResponse",
            "postRequestType": "cusType.PostAddressRequest",
          }
        }
      get:
        is: [ tr.sortable ]
      post:
        description: Adds a new address to the customer
      /{addressId}:
        type:
          {
            resType.member: {
              "putRequestType" : "cusType.PutAddressRequest"
            }
          }
        get:
          is: [ tr.cacheable ]
        put:
        patch:
        delete:
